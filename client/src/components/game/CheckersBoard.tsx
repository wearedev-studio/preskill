import React, { useState } from 'react';

// –¢–∏–ø—ã, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –≤ —à–∞—à–∫–∏, –ø—Ä–∏—Ö–æ–¥—è—â–µ–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
type Piece = {
    playerIndex: 0 | 1;
    isKing: boolean;
};
type CheckersGameState = {
    board: (Piece | null)[];
};
type CheckersMove = {
    from: number;
    to: number;
};

// –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
interface CheckersBoardProps {
    gameState: CheckersGameState;
    onMove: (move: CheckersMove) => void;
    isMyTurn: boolean;
    isGameFinished: boolean;
    myPlayerIndex: 0 | 1; // –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ (0 –∏–ª–∏ 1)
}

const CheckersBoard: React.FC<CheckersBoardProps> = ({ gameState, onMove, isMyTurn, isGameFinished, myPlayerIndex }) => {
    const [selectedPiece, setSelectedPiece] = useState<number | null>(null);

    const handleSquareClick = (index: number) => {
        // –ó–∞–ø—Ä–µ—â–∞–µ–º –ª—é–±—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à —Ö–æ–¥ –∏–ª–∏ –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞
        if (!isMyTurn || isGameFinished) return;

        const piece = gameState.board[index];

        if (selectedPiece !== null) {
            // –í—Ç–æ—Ä–æ–π –∫–ª–∏–∫ - –ø–æ–ø—ã—Ç–∫–∞ —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥
            // TODO: –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ö–æ–¥–∞ –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏
            onMove({ from: selectedPiece, to: index });
            setSelectedPiece(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ—Å–ª–µ –ª—é–±–æ–≥–æ —Ö–æ–¥–∞
        } else if (piece && piece.playerIndex === myPlayerIndex) {
            // –ü–µ—Ä–≤—ã–π –∫–ª–∏–∫ - –≤—ã–±–æ—Ä —Å–≤–æ–µ–π —à–∞—à–∫–∏
            setSelectedPiece(index);
        }
    };

    // –°—Ç–∏–ª–∏ –¥–ª—è –¥–æ—Å–∫–∏ –∏ —Ñ–∏–≥—É—Ä
    const boardStyle: React.CSSProperties = {
        display: 'grid',
        gridTemplateColumns: 'repeat(8, 60px)',
        gridTemplateRows: 'repeat(8, 60px)',
        width: '480px',
        height: '480px',
        border: '2px solid #5a3a22',
        margin: '20px auto',
    };

    const getSquareStyle = (index: number): React.CSSProperties => {
        const row = Math.floor(index / 8);
        const col = index % 8;
        const isDark = (row + col) % 2 !== 0;
        return {
            backgroundColor: isDark ? '#8B4513' : '#F0D9B5',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            cursor: 'pointer',
            border: index === selectedPiece ? '3px solid #64ffda' : 'none', // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —à–∞—à–∫–∏
        };
    };

    const pieceStyle: React.CSSProperties = {
        width: '80%',
        height: '80%',
        borderRadius: '50%',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        color: 'white',
        fontSize: '1.5rem',
        fontWeight: 'bold',
    };

    return (
        <div style={boardStyle}>
            {gameState.board.map((piece, index) => (
                <div key={index} style={getSquareStyle(index)} onClick={() => handleSquareClick(index)}>
                    {piece && (
                        <div style={{
                            ...pieceStyle,
                            backgroundColor: piece.playerIndex === 0 ? '#1e1e1e' : '#e0e0e0', // –ß–µ—Ä–Ω—ã–µ –∏ –±–µ–ª—ã–µ
                            color: piece.playerIndex === 0 ? 'white' : 'black',
                        }}>
                            {piece.isKing && 'üëë'}
                        </div>
                    )}
                </div>
            ))}
        </div>
    );
};

export default CheckersBoard;